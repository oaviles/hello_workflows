name: Orchestrator Workflow

on: workflow_dispatch
 # push:
 #   branches: [ main ]
 # workflow_dispatch:

jobs:
  # ------- Main Orchestration  ---------------
  
  build:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Build Microservice 1
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Build Microservice'

      - name: Build Microservice 2
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Build Microservice'
          
      - name: Build Microservice 3
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Build Microservice'
          
      - name: Build Microservice 4
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Build Microservice'
          
      - name: Build Microservice 5
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Build Microservice'
          
      - name: Build Microservice 6
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Build Microservice'
    
          
  unit-test:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs: build
    steps:
      - name: Test Microservice
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Test Microservice'
          
  code-quality-check:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs: build
    steps:
      - name: Code Quality Check
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Code Quality Check'
          
  vulnerability-check:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs: build
    steps:
      - name: Vulnerabolity Check
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Vulnerabolity Check'
  
  dev-environment:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs: [unit-test, code-quality-check, vulnerability-check]
    steps:
      - name: Deploy Dev Environment
        id: javascriptaction
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Deploy Dev Env'
          
  qa-environment:
    if: ${{ success() }}
    needs: [unit-test, code-quality-check, vulnerability-check]
    runs-on: ubuntu-latest
    environment:
      name: qa
      url: 'https://delightful-flower-012038310.1.azurestaticapps.net'

    steps:
      - name: Deploy QA Enviroment
        id: javascriptaction
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Deploy Dev Env'
          
  prod-environment:
    if: ${{ success() }}
    needs: integration-teting-qa-env
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: 'https://delightful-flower-012038310.1.azurestaticapps.net'
    
    strategy:
      matrix:
        include: 
          - region-1: east
            site: "EastUS"
            datacenter: "site-east"
          - region-2: west
            site: "WestUS"
            datacenter: "site-west"      

    steps:         
      - name: Deploy Prod Enviroment
        id: javascriptaction
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Deploy Dev Env'
          
 # ------- Main Orchestration  End ---------------
 
 # ------- If Fail a job ---------------

  create-issue-build:
    if: ${{ failure() }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Build Fail
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Build Fail'
          
  create-issue-test:
    if: ${{ failure() }}
    needs: [unit-test, code-quality-check, vulnerability-check]
    runs-on: ubuntu-latest
    steps:
      - name: Test Fail
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Test Fail'

  create-issue-dev-env:
    if: ${{ failure() }}
    needs: dev-environment
    runs-on: ubuntu-latest
    steps:
      - name: Dev Env deployment Fail
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Create Issue Dev Env deployment Fail'
  
  create-issue-qa-env:
    if: ${{ failure() }}
    needs: integration-teting-qa-env
    runs-on: ubuntu-latest
    steps:
      - name: QA Env deployment Fail
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Create Issue QA Env deployment Fail'
          
  create-issue-prod-env:
    if: ${{ failure() }}
    needs: [run-load-testing-prod-env, integration-teting-prod-env]
    runs-on: ubuntu-latest
    steps:
      - name: Production Env deployment Fail
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Create Issue Production Env deployment Fail'
  
  # ------- If Fail a job End ---------------
  
  # ------- Testing ---------------
  
  run-load-testing-prod-env:
    if: ${{ success() }}
    needs: prod-environment
    runs-on: ubuntu-latest
    steps:
      - name: Production Env deployment Fail
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Run Load Testing on Production Env'
          
  integration-teting-prod-env:
    if: ${{ success() }}
    needs: [prod-environment]
    runs-on: ubuntu-latest
    steps:
      - name: Integration Testing on Production Env
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Integration Testing'
          
  integration-teting-qa-env:
    if: ${{ success() }}
    needs: [qa-environment]
    runs-on: ubuntu-latest
    
    steps:
      - name: Integration Testing on QA Env
        uses: oaviles/javascript_action@v1.1
        with:
          message: 'Integration Testing QA'
          
   # ------- Testing End ---------------
          
